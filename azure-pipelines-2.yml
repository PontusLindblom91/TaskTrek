name: TaskTrek-CI

trigger:
- main

pool:
  name: SelfHostedDocker   

variables:
  solution: '**/*.sln'
  buildConfiguration: 'Release'
  testProject: '**/*Tests.csproj'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - task: NuGetToolInstaller@1
      displayName: 'Install NuGet'

    - task: DotNetCoreCLI@2
      displayName: 'Restore packages'
      inputs:
        command: restore
        projects: '$(solution)'

    - task: DotNetCoreCLI@2
      displayName: 'Build solution'
      inputs:
        command: build
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Publish project'
      inputs:
        command: publish
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish build artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'TaskTrek'
        publishLocation: 'Container'

- stage: Test
  dependsOn: Build
  jobs:
  - job: RunTests
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Run tests'
      inputs:
        command: test
        projects: '$(testProject)'
        arguments: '--configuration $(buildConfiguration)'

- stage: Deploy
  dependsOn: Test
  jobs:
  - job: DeployJob
    steps:
    - download: current
      artifact: TaskTrek

    - task: AzureWebApp@1
      displayName: 'Deploy to Azure App Service'
